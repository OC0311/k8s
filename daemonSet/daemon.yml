apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: test-daemon
  labels:
    name: test-daemon
spec:
  minReadySeconds: 3
  # 更新策略
  selector:
    matchLabels:
      name: web
  template:
    metadata:
      name: replicate
      labels:
        name: web
    spec:
      # node 选择器 会影响pod 的调度，只会将pod 运行在杭州的Node上
      nodeSelector:
        region: hangzhou
      affinity:
        nodeAffinity:
          # 必须满足的条件
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: city
                    operator: In
                    values:
                      - yuhang
          # 优先满足条件
          preferredDuringSchedulingIgnoredDuringExecution:
            # 权重-优先级 1-100
            - weight: 2
              preference:
                matchExpressions:
                  - key: city
                    operator: In
                    values:
                      - yuhang
        # 失败时重启
      restartPolicy: Always
      containers:
        # 镜像拉取方式选择在本地te
        - name:  web
          imagePullPolicy: Never
          image: test_web:v1
          # 这里并不是真正的暴露端口，而是起一个提示的作用，该容器起暴露了31344端口
          ports:
            - containerPort: 31344
          resources:
            # request 用于调度时 会根据资源的最低要求调度到合适的node 上
            # Mi = 1024*1024   M = 1000*1000
            # m = 300 等于千分之3 秒
            requests:
              cpu: "200m"
              memory: "256Mi"
            # 运行时 的限制
            limits:
              memory: "256Mi"
              cpu: "200m"